<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="wrappable"
                 type="TestSupport.Unity.Wrappable, TestSupport.Unity" />
      <typeAlias alias="wrappableWithProperty"
                 type="TestSupport.Unity.WrappableWithProperty, TestSupport.Unity" />
    </typeAliases>

    <containers>
      <container name="CanConfigureDefaultInjectorForType">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <transparentProxyInjection>
              <defaultInjector type="wrappable"/>
            </transparentProxyInjection>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureInjectorForType">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <transparentProxyInjection>
              <injector type="wrappable"/>
            </transparentProxyInjection>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureInjectorForTypeAndName">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <transparentProxyInjection>
              <injector type="wrappable" name="name"/>
            </transparentProxyInjection>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureSeveralInjectors">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <transparentProxyInjection>
              <injector type="wrappable"/>
              <injector type="wrappable" name="name"/>
            </transparentProxyInjection>
          </add>
        </extensionConfig>
      </container>

      <container name="CanMixDefaultAndNonDefaultInjectors">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <transparentProxyInjection>
              <defaultInjector type="wrappable"/>
              <injector type="wrappableWithProperty"/>
            </transparentProxyInjection>
          </add>
        </extensionConfig>
      </container>
    </containers>
  </unity>
</configuration>