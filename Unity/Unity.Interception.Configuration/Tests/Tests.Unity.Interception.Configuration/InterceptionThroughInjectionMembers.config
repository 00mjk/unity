<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section
      name="unity"
      type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section
      name="DeserializingInterceptionBehaviorElementWithNoDataThrows"
      type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section
      name="DeserializingInterceptionBehaviorElementWithMultipleDataThrows"
      type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="int" type="System.Int32, mscorlib" />
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="virtualMethod"
                 type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="Interceptable"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.Interceptable, Unity.Interception.Configuration.Tests" />
      <typeAlias alias="GlobalCountInterceptionBehavior"
                 type="Microsoft.Practices.Unity.TestSupport.GlobalCountInterceptionBehavior, Unity.TestSupport" />
      <typeAlias alias="FixedGlobalCountInterceptionBehaviorDescriptor"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.FixedGlobalCountInterceptionBehaviorDescriptor, Unity.Interception.Configuration.Tests" />
    </typeAliases>

    <containers>
      <container name="CanConfigureInterceptorThroughConfigurationFile">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptorElement, Microsoft.Practices.Unity.Interception.Configuration"
                type="virtualMethod"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="CanConfigureAdditionalInterfaceThroughConfigurationFile">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.AdditionalInterfaceElement, Microsoft.Practices.Unity.Interception.Configuration"
                type="System.IServiceProvider, mscorlib"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="CanConfigureInterceptionBehaviorWithTypeThroughConfigurationFile">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionBehaviorElement, Microsoft.Practices.Unity.Interception.Configuration"
                behaviorType="GlobalCountInterceptionBehavior"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="CanConfigureInterceptionBehaviorWithDescriptorTypeThroughConfigurationFile">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionBehaviorElement, Microsoft.Practices.Unity.Interception.Configuration"
                behaviorDescriptorType="FixedGlobalCountInterceptionBehaviorDescriptor"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="CanConfigureInterceptionBehaviorWithResolvedInstanceThroughConfigurationFile">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionBehaviorElement, Microsoft.Practices.Unity.Interception.Configuration"
                behavior="call count"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="InterceptorConfiguredWithNonResolvableTypeThrows">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptorElement, Microsoft.Practices.Unity.Interception.Configuration"
                type="invalid"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="InterceptorConfiguredWithNonCompatibleTypeThrows">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptorElement, Microsoft.Practices.Unity.Interception.Configuration"
                type="singleton"/>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="InterceptorConfiguredWithNonInstantiableTypeThrows">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptorElement, Microsoft.Practices.Unity.Interception.Configuration"
                type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.InterceptorWithNoDefaultConstructor, Unity.Interception.Configuration.Tests"/>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>
  </unity>

  <DeserializingInterceptionBehaviorElementWithNoDataThrows>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="int" type="System.Int32, mscorlib" />
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="virtualMethod"
                 type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="Interceptable"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.Interceptable, Unity.Interception.Configuration.Tests" />
      <typeAlias alias="GlobalCountInterceptionBehavior"
                 type="Microsoft.Practices.Unity.TestSupport.GlobalCountInterceptionBehavior, Unity.TestSupport" />
      <typeAlias alias="FixedGlobalCountInterceptionBehaviorDescriptor"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.FixedGlobalCountInterceptionBehaviorDescriptor, Unity.Interception.Configuration.Tests" />
    </typeAliases>

    <containers>
      <container>
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionBehaviorElement, Microsoft.Practices.Unity.Interception.Configuration" />
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>
  </DeserializingInterceptionBehaviorElementWithNoDataThrows>

  <DeserializingInterceptionBehaviorElementWithMultipleDataThrows>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="int" type="System.Int32, mscorlib" />
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="virtualMethod"
                 type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="Interceptable"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.Interceptable, Unity.Interception.Configuration.Tests" />
      <typeAlias alias="GlobalCountInterceptionBehavior"
                 type="Microsoft.Practices.Unity.TestSupport.GlobalCountInterceptionBehavior, Unity.TestSupport" />
      <typeAlias alias="FixedGlobalCountInterceptionBehaviorDescriptor"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.FixedGlobalCountInterceptionBehaviorDescriptor, Unity.Interception.Configuration.Tests" />
    </typeAliases>

    <containers>
      <container>
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <types>
          <type type="Interceptable">
            <typeConfig>
              <add
                elementType="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionBehaviorElement, Microsoft.Practices.Unity.Interception.Configuration"
                behavior ="behavior"
                behaviorType ="behaviorType"/>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>
  </DeserializingInterceptionBehaviorElementWithMultipleDataThrows>

</configuration>